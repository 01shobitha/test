<chapter id="lvod"><title id="tvod">Video On Demand</title>

<sect1><title>Overview</title>
<sect2><title>What is Video On Demand ?</title>
<para>
With Video On Demand (VOD), the client can start the video when he
wants, make pauses, go forward and go back in the video. It's of course
the best of video streaming and the dream for every client.
</para>
</sect2>
<sect2><title>Hardware required</title>
<para>
VOD is a very big consumer of resources for the server and the
network. VOD is unicast, not multicast. This mean that if 50 clients are
doing VOD with the same server, watching a 5 Mbit/s MPEG 2 video, the
resources needed as a minimum are the following :
</para>
<itemizedlist>
<listitem><para>for the VOD server : 5*50=250 Mbit/s disk access and a 250 Mbit/s
connection to the backbone</para></listitem>
<listitem><para>for the Backbone : 250 Mbit/s
bandwidth,</para></listitem>
<listitem><para>for the client : 5 Mbit/s connection to the
backbone.</para></listitem>
</itemizedlist>
<para>
You can see that VOD needs huge resources for the server in term of disk
access and network connection, and for the backbone.
</para>
<sect2><title>Design of the VOD solution</title>
<para>
The design is very simple. The idea is to do HTTP streaming, i.e. stream
an MPEG video encapsulated in HTTP. The regulation of the bitrate
between the client and the server is done automatically by TCP. With
HTTP version 1.1, there is the possibility to seek in a file downloaded,
that we use to seek in the video.
</para>
<para>
On the VOD server, you need to install a Web server. For example, we use
a Linux server running Apache as HTTP daemon. But other O.S. and other
Web server should work too, but we have never tested. Make your MPEG 1
or 2 files available to the clients on the Web server.
</para>
<para>
On the client, you only need vlc installed.
</para>
</sect2>
</sect1>
<sect1><title>VOD with VideoLAN</title>
<sect2><title>On the server</title>
<para>
For example, we have a Web server whose DNS name is
<filename>vod.videolan.org</filename>. On this server, there are two MPEG
files <filename>video1.mpg</filename> and
<filename>video2.mpg</filename> available to the clients at
the adresses <filename>http://vod.videolan.org/test/video1.mpg</filename> and
<filename>http://vod.videolan.org/test/video2.mpg</filename>.
</para>
</sect2>
<sect2><title>On the client</title>
<para>
On the client, run vlc with this command line to view the first
video :</para>
<para><screen>
<prompt>%</prompt><userinput> vlc http://vod.videolan.org/test/video1.mpg</userinput></screen>
<para>and this command line to view the second video :</para>
<para><screen>
<prompt>%</prompt><userinput> vlc http://vod.videolan.org/test/video2.mpg
</userinput></screen></para>
<para>
You can also use the interface : click on "Net" and select
HTTP and enter the URL "http://vod.videolan.org/test/video1.mpg" or
"http://vod.videolan.org/test/video2.mpg".
<para>
</sect2>
<sect2><title>Client launched by a Web browser</title>
<para>
The idea is to have a Web page with the list of the videos available,
and, when you clic on a video, vlc starts to display it.
</para>
<para>
You have to write the Web page with regular hypertext links to the
video files and configure you Web browser to launch vlc when a
file with ".mpg" (and ".mpeg" and ".vob") extension is selected. Tell
the client that vlc accepts the URL as a command line : with this
configuration, the file will not be stored on the client's hard drive
but will be directly read by vlc.
</para>
<sect2><title>Using a channel tool for VOD</title>
<para>
You can use miniVLCS and enable the clients to select channel
1 to view the first video, channel 2 to view the second video, and so
on.
</para>
<para>
Install and configure miniVLCS on a Linux machine (it can be the same machine as
the
VOD server). Please, refer to the section describing the miniVLCS (<xref
linkend="lvlcs">).
</sect2>
</sect1>
