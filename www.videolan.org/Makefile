#!/usr/bin/make -f
#
# Makefile to build PHP-based websites statically
# by Remi Denis-Courmont
# $Id$

ifeq ($(ROOT),)
  ROOT := ./
  NEXTROOT := ../
else
  NEXTROOT := ../$(ROOT)
endif

PHPCGI := $(ROOT)bin/php-cgi.sh
STRIP_HEADERS := $(ROOT)bin/strip-headers.sh

all: real-all

include Makefile.inc

ifneq ($(PHP_FILES),)
  PHP_FILES := $(PHP_FILES:%=%.php)
else
  PHP_FILES := $(wildcard *.php)
endif

ifneq ($(PHP_IGNORES),)
  PHP_FILES := $(filter-out $(PHP_IGNORES:%=%.php), $(PHP_FILES))
endif

TARGETS := $(PHP_FILES:%.php=%.html) $(ROOT)/include/mirrors.php $(ROOT)/style/countries.css $(ROOT)/news-rss.html $(ROOT)/style/style.css locales

real-all: $(TARGETS) all-recursive

clean: clean-recursive
	rm -f $(TARGETS) $(TARGETS:%=%.tmp)

%-recursive:
	@for d in $(SUBDIR) ; do \
		$(MAKE) -f $(NEXTROOT)Makefile -C $$d ROOT=$(NEXTROOT) $* \
			HERE=$(HERE)$$d/ || exit $$? ; \
	done

%.html: %.php $(ROOT)Makefile $(ROOT)/include/*.php $(ROOT)/include/*.php $(ROOT)/include/mirrors.php $(ROOT)/include/menu/*
	@echo "Preprocessing $@ ..."
	@rm -f $@.tmp
	@cd $(ROOT) || exit 1 ; \
	if ! DOCUMENT_ROOT=$(ROOT) $(HERE)$(PHPCGI) $(HERE)$< > $(HERE)$@.tmp; then \
		cat $(HERE)$@.tmp | tail -1 ; \
		rm -f $(HERE)$@.tmp ; \
		exit 1 ; \
	fi
	@$(STRIP_HEADERS) < $@.tmp > $@.tmp2
	@mv -v $@.tmp2 $@
	@rm -f $@.tmp $@.tmp2

locales: $(ROOT)/index.bg.php $(ROOT)/index.by.php $(ROOT)/index.de.php $(ROOT)/index.dk.php $(ROOT)/index.es.php $(ROOT)/index.fr.php $(ROOT)/index.gr.php $(ROOT)/index.hi.php $(ROOT)/index.mkd.php $(ROOT)/index.pl.php $(ROOT)/index.ro.php $(ROOT)/index.ru.php $(ROOT)/index.tr.php

index.%.php: index.php
	rm -f $@
	sed -e "s/language = \"\"/language = \"$*\"/" index.php > $@;
	msgfmt -c -v -o locale/$*/LC_MESSAGES/website.mo locale/$*/LC_MESSAGES/website.po

$(ROOT)/include/mirrors.php: $(ROOT)/include/mirrors $(ROOT)Makefile
	@echo "Processing $< ..."
	awk -F '|' 'BEGIN { print "<?php\n/* This file is automatically generated from the mirrors file. Do not edit */\n$$mirrors = array(" } !/^#/{print "  array( \""$$1"\", \""$$2"\", \""$$3"\", \""$$4"\", \""$$5"\", "$$6" ),"} END { print ");\n?>" }' $< > $<.php

$(ROOT)/style/countries.css: $(ROOT)/include/mirrors $(ROOT)Makefile
	@echo "Processing $@.in ..."
	echo "/* Auto generated. Do not edit. */" > $@
	rm -f $@
	awk -F '|' '!/^#/ { print $$4; }' $<|sort|uniq|awk '{ print "#maincontent table td."$$1; print " { padding-left:2em; background: url(http://images.videolan.org/images/flags/"$$1".png) left no-repeat; }" }' >> $@

$(ROOT)/style/style.css: $(ROOT)/style/style.css.in
	@echo "Processing $@.in ..."
	yui-compressor --type css $< > $@.tmp || cp $< $@.tmp
	rm -f $@ && mv $@.tmp $@

news-rss.html: news.msg

update-po:
	xgettext -f locale/POTFILES -o locale/website.pot -L PHP --foreign-user --copyright-holder=jb --package-name=VideoLAN\'s\ websites

.PHONY: clean all

