<chapter id="modules"><title id="tmodules">Modules for the VideoLAN Client</title>

<sect1><title>The modules</title>

<para> The VideoLAN  Client uses a modular interface,  which allows easy
add of  new fonctions and  supported formats.  Here is a  description of
nearly all the available modules for the VideoLAN Client. If you wish to
compile one  which is  stated <emphasis>disabled  by default</emphasis>,
you have to launch the configure script with </para>

<screen><prompt>%</prompt><userinput>
 ./configure --enable-module_name </userinput></screen>

</sect1>

<sect1><title>Video outputs</title>

<sect2><title>x11</title>

<para><emphasis>default : enabled</emphasis></para>

<para>This is the basic x11 video output. It only requires a working X11 server. You will need xlibs headers to compile it (xlibs-dev package on Debian systems).</para>

</sect2><sect2><title>xvideo</title>

<para><emphasis>default : enabled</emphasis></para>

<para>It requires an xvideo compliant graphic card (it is the case for nearly all the modern card). It uses hardware acceleration for yuv transformation and for rescaling.</para>

</sect2>
<sect2><title>TODO</title>
<para>
sdl

default : enabled

This video output uses sdl libraries. You need at least version 1.1.6 of this libraries.

You may indicate the path to the sdl-config program with the

 --with-sdl-config-path=PATH 

option given to the

    configure

script.

directx

default: enabled on win32

This video output uses Microsoft Direct X libraries. It is recommended for the win32 port.

You may indicate the path to directx libraries and headers with the

--with-directx=PATH

option.

fb

default: enabled on Linux

This is the frame buffer video output. It requires that your kernel was compiled with frame buffer support.
glide

default: disabled

This video output uses Glide libraries (hardware acceleration for 3Dfx cards).

You may indicate the path to the library with the

--with-glide=PATH

compilation option.

mga

default: disabled

It provides hardware acceleration for Matrox cards on Linux.
ggi

default: disabled
aa

default: disabled

This video output uses the aalib library to display video through ASCII art. It requires aalib headers (aalib1-dev under Debian) to compile.
6.2 Video filters modules
deinterlace

default: enabled

This filter deinterlaces video. It is useful with streams coming from a satellite broadcast.
wall

default: enabled

This filter allows you to have the video cut in pieces in several windows, which you can order as you wish. It can be used to generate image walls with several sources. Start it with

 --filter wall:XxY

in order to have the video cut in X rows and Y columns

distort

default: enable

This filter adds a distortion effect to the video. Who said it was useless ;-) ?
transform

default: enable

This filter rotates the video window of 90 degrees.
invert

default: enabled

This filter inverses colors.
6.3 Sound outputs
dsp

default: enabled on Linux

This is the Linux /dev/dsp output. It requires that your kernel was compiled with support for your sound card.
alsa

default: disabled

This is the sound output for Advanced Linux Sound Architecture. It requires that you installed the alsa drivers and libraries.
esd

default: disabled

This sound output has Enlightened Sound Daemon support (usually used with Gnome). You must have the daemon and its libraries installed.
arts

default: disabled

This sound output has aRts (KDE's sound server) support. You must have the daemon and its libraries installed.
waveout

default: enabled on win32

This is the Wave output, which is used by the win32 port.
6.4 Input modules
dvd

default: enabled

This is the DVD input module. It will need libdvdcss, which can be found http://www.videolan.org/libdvdcss/.
dvdread

default: disabled

This is an alternative to the previous one, it uses libdvdread (which also needs libdvdcss).
vcd

default: enabled

This is the VideoCD input.
http

default: enabled

This is the http input. You can use it for Video On Demand.
satellite

default: disabled

This is an input module that allows to read directly from a Hauppauge WinTV Nova card under Linux. It requires drivers 0.9.4 available from linuxtv.org.
avi

default: enabled

This input module allows to read .avi files.
6.5 Interface modules
gtk

default: enabled

This is the GTK+ interface. It needs gtk libraries (libgtk1.2 package on Debian) and headers files if you are compiling it (libgtk1.2-dev package on Debian). Note that it can be used under Windows.
gnome

default: disabled

This is the Gnome interface. It needs gnome libraries (libgnome32 under Debian) and headers (libgnome-dev) if you wish to compile it.
intfwin

default: enabled on win32

This is the Windows native interface. It requires Borland C++ builder to compile. You may use

--with-bc-builder=PATH

option to specify the path to this application.

qt

default: disabled

This is the QT libraries interface module. You will need the libraries (libqt2 package on Debian) and headers (libqt-dev) if you wish to compile it.
kde

default: disabled

This is the KDE interface module. You will need the libraries (kdelib package on Debian) and headers (kde-devel) if you wish to compile it.
rc

default: enable

This is the Remote Control interface module. With this one, vlc is controled by sending him commands, such as play, stop, ... so that you may control vlc through a script.
ncurses

default: disabled

This is a text interface, using ncurses library. You will need ncurses headers if you want to compile it (libncurses5-dev on Debian).
lirc

default: disabled

This interface module allows you to control vlc through a remote. A lircrc example is provided to help you configure it to your remote (see doc/lirc/example.lircrc).
6.6 Codec modules

The following modules add codec support.
a52

default: disabled

This is a better AC3/A52 decoder than the built-in one, based on liba52 : liba52.
ffmpeg

default: disabled

This is a free MPEG-4/DivX/OpenDivX codec : ffmpeg.
6.7 OS support modules

The following modules add support or different OSs.
macosx

default: enabled on MacOS X

This is the MacOS X support module, including a native interface.
qnx

default: enabled on qnx

This is the QNX RTOS support module.

</para>
</sect2>
</sect1>


</chapter>
