<?xml version="1.0" encoding="iso8859-1"?>
<!-- revision:1.1 -->
<chapter id="config">
<title id="tconfig">
Configuración
</title>

<para>
VLS carga su configuración del fichero de
configuración <filename>vls.cfg</filename>, que se
supone que se encuentra en el directorio actual o
en <filename>SYSCONF_DIR/videolan/vls</filename> (donde
<emphasis>SYSCONF_DIR</emphasis> es <filename>/usr/local/etc</filename>
si instalastes VLS a mano, o es <filename>/etc</filename>
si lo instalastes como un paquete debian).
</para>

<para>
Para escribir un fichero <filename>vls.cfg</filename>, usa como punto
de partida el proporcionado con VLS
.</para>

<sect1>
<title>
Estructura general
</title>

<para>
El fichero de configuración <filename>vls.cfg</filename>
está dividido en secciones, y cada sección puede contener varias
variables:
</para>

<programlisting>

BEGIN "Seccion1"
  Variable1 = "valor1"
  Variable2 = "valor2"
  [...]
END

BEGIN "Seccion2"
  Variable1 = "valor1"
  Variable3 = "valor3"
  [...]
END

[...]
</programlisting>

<para>
Todos los nombres de sección, nombres de variable y valores
no son case-sensitive. Puede haber secciones y subsecciones vacías. Los
comentarios deben comenzar con un carácter <keycap>#</keycap>. Algunas variables tienen
un valor por defecto; por lo que se puede omitir declararlas,
y tendrán su valor por defecto.
</para>

</sect1>

<sect1>
<title>
Construyendo un <filename>vls.cfg</filename>
</title>

<para>
A continuación se explican todas las secciones
que se pueden encontrar en el fichero <filename>vls.cfg</filename>:
</para>

<sect2><title>Section "VLS"</title>

<para>
Esta sección contiene los parámetros globales.
</para>

<programlisting>
LogFile = "name"
</programlisting>

<para>
Nombre del fichero de logs de VLS. Si se deja vacío "", no
se crea fichero de logs. Por defecto es "vls.log".
</para>

<programlisting>
SystemLog = "[disable|enable]"
</programlisting>

<para>
Generando Logs en el SystemLog. De momento, sólo está implementado
el SystemLog usando syslogd: compile con la opción <command>./configure
--enable-syslog</command>.
</para>

<caution><para>
Si VLS es ejecutado como <command>vlsd</command>, entonces
la siguiente configuración es obligatoria:
</para>

<programlisting>
BEGIN "Vls"
  LogFile   = ""
  SystemLog = "enabled"
  ScreenLog = "disabled"
END
</programlisting>

</caution>

<programlisting>
ScreenLog = "[disable|enable]"
</programlisting>

<para>
Generando mensajes de log en la consola.
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "Vls"
  LogFile   = "vls.log"
  SystemLog = "disable"
  ScreenLog = "enable"
END
</programlisting>

</sect2>

<sect2><title>
Section "Groups"
</title>

<para>
En esta sección, se pueden definir lo grupos de usuarios,
y qué comandos son permitidos para estos usuarios. Para
cada grupo que se quiera definir, se debe añadir una línea en
el siguiente formato:
</para>

<programlisting>
groupname = "command1|command2|..."
</programlisting>

<para>
Esto añade un grupo "groupname", y sus usuarios
tienen permitido ejecutar el comando1, comando2, y así sucesivamente. Por el momento, los
comandos disponibles son: help, browse, start, suspend, resume, forward,
rewind, stop, shutdown, logout.
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "Groups"
  monitor = "help|browse|logout"
  master  = "help|browse|start|resume|suspend|forward|rewind|stop|shutdown|logout"
END
</programlisting>

</sect2>

<sect2><title>
Section "Users"
</title>

<para>
Esta sección contiene una lista de los usuarios con permisos para
controlar VLS a través de una interfaz de administración. Por cada usuario,
se debe añadir una línea con el siguiente formato:
</para>

<programlisting>
username = "password:groupname"
</programlisting>

<para>
Esto añade un usuario "username", que pertenece al
grupo "groupname" (definido en la sección "Groups") y que puede
autenticarse con la contraseña "password".
</para>

<itemizedlist>

<listitem><para>
Bajo Unix/Linux, la contraseña debe estar encriptada,
con una herramienta como <command>mkpasswd</command>, o con la
función UNIX "crypt".
</para></listitem>

<listitem><para>
Bajo Windows, la contraseña debe estar en limpio.
</para></listitem>

</itemizedlist>

<para>
Ejemplo para Unix/Linux:
</para>

<programlisting>
BEGIN "Users"
  monitor = "3BcKWoiQn0vi6:monitor"       # password es 'monitor'
  admin   = "42BKiCguFAL/c:master"        # password es 'Vir4Gv5S'
END
</programlisting>

</sect2>

<sect2><title>
Section "Telnet"
</title>

<para>
En esta sección, se puede configurar la interfaz de
administración Telnet.
</para>

<programlisting>
LocalPort = "port"
</programlisting>

<para>
Define qué puerto será utilizado por el servidor
Telnet. El puerto por defecto es "9999"


.</para>

<programlisting>
Domain = "domain"
</programlisting>

<para>
Se puede utilizar "inet4" o "inet6" (por defecto "inet4"). Si
se quiere utilizar direcciones IPv4, utilice "inet4", y si se quiere
IPv6, utilice "inet6".
</para>

<programlisting>
LocalAddress = "IP address"
</programlisting>

<para>
Define en qué dirección IP estará escuchando el servidor Telnet
para aceptar peticiones. Por defecto es "0.0.0.0" (ó "0::0" con
IPv6).
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "Telnet"
  LocalPort = "9999"
END
</programlisting>
</sect2>

<sect2><title>
Section "NativeAdmin"
</title>

<para>
Usa la misma sintaxis que "Telnet". No se utiliza todavía.
</para>

</sect2>

<sect2><title>
Section "Inputs"
</title>

<para>
En esta sección, se puede definir qué entradas se quieren
usar. Por cada entrada que se necesite, se debe añadir una línea
en el siguiente formato:
</para>

<programlisting>
InputName = "Type"
</programlisting>

<para>
Esto añade una entrada con el nombre "InputName", del tipo
"Type". Como se explicó anteriormente, existen varios tipos de
entradas:
</para>

<itemizedlist>

<listitem><para>
"local" para leer de un fichero o un DVD,
</para></listitem>

<listitem><para>
"video" para leer de una tarjeta capturadora MPEG,
</para></listitem>

<listitem><para>
"dvb" para leer de una tarjeta DVB,
</para></listitem>

<listitem><para>
"v4l" para leer de un dispositivo Video4Linux.
</para></listitem>

</itemizedlist>

<para>
Cada entrada debe estar configurada en su propia sección
(ver el siguiente párrafo).
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "Inputs"
  local1 = "local"
  pvr    = "video"
  dvb1   = "dvb"
  tuner  = "v4l"
END
</programlisting>
</sect2>

<sect2><title>
Configuración de entradas
</title>

<para>
Para cada entrada declarada en la sección "Inputs",
excepto para las entradas "local", se debe añadir una sección con el mismo nombre que
la entrada correspondiente. Por ejemplo, si se declara una entrada "pvr",
debe haber también una sección llamada "pvr". La sintaxis de cada sección
depende del tipo de la entrada correspondiente.
</para>

<para>
Para configurar una entrada local, no se debe hacer
nada. Excepto cuando otra estrategia trickplay deba ser usada:
</para>

<programlisting>
BEGIN "Local1"
  ProgramCount = "1"
  TrickPlay    = "normal"
END
</programlisting>

<para>
"Local1" es el nombre de la entrada local que se quiere
configurar. "ProgramCount" es el número de programas asignados a esta
entrada. "TrickPlay" es la estrategia trickplay que se usa en esta entrada
(por defecto "normal").
</para>

<para>
Para configurar una entrada video, se debe añadir una entrada en el
siguiente formato:
</para>

<programlisting>
BEGIN "VideoInputName"
  Device = "device"
  Type   = "type"
END
</programlisting>

<para>
"VideoInputName" es el nombre de la entrada de vídeo que
se quiere configurar. "Device" es la ruta de la tarjeta codificadora MPEG
de la que se quiere leer (por defecto es "/dev/video"). "Type" puede ser "Mpeg2-PS"
o "Mpeg2-TS", dependiendo de la configuración de la tarjeta (por defecto es
"Mpeg2-PS").
</para>

<para>
Ejemplo para una tarjeta Hauppauge WinTV-PVR-250:
</para>

<programlisting>
BEGIN "pvr"
  Device = "/dev/video0"
  Type   = "Mpeg2-PS"
END
</programlisting>

<para>
Para configurar una entrada dvb, se debe añadir una sección en el
siguiente formato:
</para>

<programlisting>
BEGIN "DvbInputName"
  DeviceNumber = "devicenumber"
  SendMethod   = "0"
END
</programlisting>

<para>
"DvbInputName" es el nombre de la entrada dvb que se
quiere configurar. Se debe poner "SendMethod" a "0" si se quiere transmitir
el flujo DVB completo o se debe poner a "1" si sólo se quieren transmitir
los flujos MPEG de audio y vídeo (por defecto es "0"). "DeviceNumber"
es el número de la tarjeta DVB de la que se quiere leer (lee
de <filename>/dev/ost/dvr&lt;devicenumber&gt;</filename>,
por defecto es ""). El fichero de configuración dvb es definido por el
driver. Se puede encontrar en <filename>$HOME/.dvbrc</filename> para
/dev/dvb/adapter0 ó en <filename>$HOME/.dvbrc.X</filename> para
<filename>/dev/dvb/adapterX</filename>.
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "dvb1"
  DeviceNumber = "0"
  TrickPlay = "normal"
END
</programlisting>

</sect2>

<sect2><title>
Section "Channels"
</title>

<para>
En esta sección, se pueden definir las salidas que se
quieren utilizar. Para cada salida, se debe escribir una línea en el
siguiente formato:
</para>

<programlisting>
ChannelName = "Type"
</programlisting>

<para>
Esto añade una salida llamada "ChannelName", del tipo
"Type". "Type" debe ser "network" o "file". Como las entradas,
las salidas deben ser configuradas en su propia sección.
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "Channels"
  localhost  = "network"
  client1    = "network"
  client2    = "network"
  multicast1 = "network"
  multicast2 = "network"
  localfile  = "file"
END
</programlisting>

</sect2>

<sect2><title>
Configuración de las salidas
</title>

<para>
Para cada salida declarada en la sección "Channels",
se debe añadir una sección con el mismo nombre que su salida correspondiente.
La sintaxis de cada sección depende del tipo de salida.
</para>

<para>
Para configurar una salida de red, se debe añadir una sección en el
siguiente formato:
</para>

<programlisting>
BEGIN "NetChannelName"
  Domain    = "Domain"
  Type      = "Type"
  SrcHost   = "SourceHost"
  SrcPort   = "SourcePort"
  DstHost   = "DestHost"
  DstPort   = "DestPort"
  TTL       = "ttl"
  Interface = "Interface"
END
</programlisting>

<itemizedlist>

<listitem><para>
"NetChannelName" es el nombre de la salida de red que
se quiere configurar.
</para></listitem>

<listitem><para>
"Domain" puede ser "inet4" si se usan direcciones IPv4,
o "inet6" si se usa IPv6 (por defecto es "inet4")


.</para></listitem>

<listitem><para>
"Type" puede ser "unicast", "broadcast" o
"multicast" (por defecto es "unicast"), dependiendo de lo que se quiera hacer
(en la dirección "DstHost").
</para></listitem>

<listitem><para>
"SourceHost" es la dirección IP (o nombre DNS) desde
la cual VLS enviará el flujo.
</para></listitem>

<listitem><para>
"SourcePort" es el puerto UDP desde el que se enviará
el flujo.
</para></listitem>

<listitem><para>
"DestHost" es la dirección IP (o nombre DNS) a
la cual se enviará el flujo.
</para></listitem>

<listitem><para>
"DestPort" es el puerto UDP al que se enviará el flujo
(por defecto es "1234").
</para></listitem>

<listitem><para>
"TTL" es una opción válida sólamente si "Type" es
"multicast" (el valor por defecto es "0"). Se puede usar para incremententar el TTL
de los paquetes multicast si estos tienen que cruzar varios routers.
</para></listitem>

<listitem><para>
"Interface" es una opción sólo soportada bajo
GNU/Linux, para forzar que el flujo sea enviado a través de una interfaz
de red dada ("eth1" por ejemplo). Para usar esta opción, se deben tener
permisos de superusuario.
</para></listitem>

</itemizedlist>

<note><para>
"SrcHost" y "SrcPort" son opcionales.
</para></note>

<para>
Para configurar una salida a fichero, se debe añadir una sección en el
siguiente formato:
</para>

<programlisting>
BEGIN "FileChannelName"
  FileName = "file"
  Append   = "append"
END
</programlisting>

<para>
"FileChannelName" es el nombre de la salida a fichero que se
quiere configurar. "file" es el nombre del fichero donde se
guardará el flujo (por defecto "fileout.ts"). "append" puede se "yes" o
"no", e indica si VLS tiene que añadir el flujo al final del fichero
file, o sobreescribirlo.
</para>

<para>
Ejemplo:
</para>

<programlisting>
BEGIN "localhost"         # El cliente está en la misma máquina que el servidor
  DstHost = "localhost"
  DstPort = "1234"
END

BEGIN "client1"           # unicast hacia client1
  DstHost = "192.168.1.2"
  DstPort = "1234"
END

BEGIN "client2"           # unicast hacia client2 en IPv6
  Domain  = "inet6"
  DstHost = "3ffe:ffff::2:12:42"
  DstPort = "1234"
END

BEGIN "multicast1"         # multicast streaming
  Type    = "multicast"
  DstHost = "239.2.12.42"
  DstPort = "1234"
  TTL     = "2"
END

BEGIN "multicast2"         # multicast streaming en IPv6
  Domain  = "inet6"
  Type    = "multicast"
  DstHost = "ff08::1"
  DstPort = "1234"
  TTL     = "12"
END

BEGIN "localfile"         # volcado a fichero
  FileName = "stream.ts"
  Append   = "no"
END
</programlisting>

<caution><para>
Si se usa, se deberían especificar los campos "SrcHost"
y "SrcPort". Por ejemplo:
</para>

<programlisting>
BEGIN "client1"         # El cliente está en la misma máquina que el servidor
  SrcHost = "192.168.1.1"  # IP de VLS
  SrcPort = "1242"         # Puerto Origen : el valor no es importante
  DstHost = "192.168.1.2"  # IP del cliente
  DstPort = "1234"
END
</programlisting>

</caution>

</sect2>

<sect2><title>
Configuración de los Programas
</title>

<para>
Como se ha explicado anteriormente, se deben definir programas.
Cada uno es un flujo MPEG (un fichero, por ejemplo). Para hacer esto, se debe
añadir una sección "Input" en el fichero <filename>vls.cfg</filename>. Cada sección
"Input" debe tener la siguiente sintaxis:
</para>

<programlisting>
BEGIN "Input"
  FilesPath    = "path"
  ProgramCount = "count"
END
</programlisting>

<para>
"path" es la ruta donde se encuentran los ficheros MPEG
(por defecto es el directorio actual). "count" es el número de
programas definidos ("0" por defecto).
</para>

<para>
Para cada programa que se quiera definir, se debe añadir una
sección con el siguiente formato:
</para>

<programlisting>
BEGIN "number"
  Name     = "name"
  Type     = "type"
  FileName = "file"
  Device   = "device"
END
</programlisting>

<itemizedlist>

<listitem><para>
"number" es el número de programa: el primer programa
tiene el número 1, el segundo 2, y así sucesivamente.


</para></listitem>

<listitem><para>
"name" es el nombre del programa, por el cual se le dirá
a VLS que arranque dicho programa (ver el siguiente capítulo "Ejecutando VLS").
</para></listitem>

<listitem><para>
"type" puede ser "Mpeg1-PS", "Mpeg2-PS", "Mpeg2-TS",
o "DVD". Si el flujo es guardado en un fichero MPEG (*.mpeg, *.mpg,
*.vob, y demás...), es probable que se encuentre en formato Mpeg1-PS o Mpeg2-PS.
</para></listitem>

<listitem><para>
si "type" se fija a "Mpeg1-PS", "Mpeg2-PS", o
"Mpeg2-TS", VLS asumirá que el flujo es guardado en el fichero "file", en
el directorio "path" (siendo "path" la variable definida en la sección
"Input").
</para></listitem>

<listitem><para>
si "type" es "DVD", la variable "Device" será
utilizada en lugar de "FileName" (la variable "FilesPath" no se refiere
al nombre del lector !). La variable "Device" es el lector DVD
("/dev/hdc" o "/dev/cdrom" por ejemplo). Se puede leer también de un DVD
copiado en el disco duro: entonces "Device" es el directorio donde se han guardado
los ficheros .vob ("/mnt/data/VIDEO_TS" por ejemplo).
</para></listitem>
</itemizedlist>

<note>
&streamable-mpeg-file;
</note>

<note><para>
Para leer DVDs, se necesita compilar VLS con
soporte DVD, que usa libdvdread y libdvdcss. Se necesitan permisos
de lectura <emphasis>y</emphasis> escritura en el lector de DVD.
</para></note>


<para>
Ejemplo completo:
</para>

<programlisting>
BEGIN "Input"
  FilesPath = "/home/videolan/streams"
  ProgramCount = "4"
END

BEGIN "1"     # Flujo MPEG2 guardado en /home/videolan/streams/Dolby.vob
  Name     = "dolby"
  FileName = "Dolby.vob"
  Type     = "Mpeg2-PS"
END

BEGIN "2"     # otro fichero
  Name     = "canyon"
  FileName = "Dolby_Canyon.vob"
  Type     = "Mpeg2-PS"
END

BEGIN "3"     # DVD
  Name     = "dvd"
  Device   = "/dev/cdrom"
  Type     = "Dvd"
END

BEGIN "4"     # DVD guardado en el disco duro
  Name     = "matrix"
  Device   = "/mnt/data/matrix/VIDEO_TS"
  Type     = "Dvd"
END
</programlisting>

</sect2>
</sect1>
</chapter>
